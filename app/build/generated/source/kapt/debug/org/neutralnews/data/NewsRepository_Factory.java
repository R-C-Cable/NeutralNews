// Generated by Dagger (https://dagger.dev).
package org.neutralnews.data;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class NewsRepository_Factory implements Factory<NewsRepository> {
  private final Provider<NewsDataSource> newsApiProvider;

  public NewsRepository_Factory(Provider<NewsDataSource> newsApiProvider) {
    this.newsApiProvider = newsApiProvider;
  }

  @Override
  public NewsRepository get() {
    return newInstance(newsApiProvider.get());
  }

  public static NewsRepository_Factory create(Provider<NewsDataSource> newsApiProvider) {
    return new NewsRepository_Factory(newsApiProvider);
  }

  public static NewsRepository newInstance(NewsDataSource newsApi) {
    return new NewsRepository(newsApi);
  }
}
