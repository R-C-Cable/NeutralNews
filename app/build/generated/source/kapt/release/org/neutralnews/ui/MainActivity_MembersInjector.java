// Generated by Dagger (https://dagger.dev).
package org.neutralnews.ui;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;
import org.neutralnews.di.ActivityLogger;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<ActivityLogger> loggerProvider;

  public MainActivity_MembersInjector(Provider<ActivityLogger> loggerProvider) {
    this.loggerProvider = loggerProvider;
  }

  public static MembersInjector<MainActivity> create(Provider<ActivityLogger> loggerProvider) {
    return new MainActivity_MembersInjector(loggerProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectLogger(instance, loggerProvider.get());
  }

  @InjectedFieldSignature("org.neutralnews.ui.MainActivity.logger")
  public static void injectLogger(MainActivity instance, ActivityLogger logger) {
    instance.logger = logger;
  }
}
